@page
@model iis.Pages.Animals.IndexModel

@{
    ViewData["Title"] = "Animals";
}

<div class=row>
    <div class=col-sm-8>
        <h1>List of animals at our shelter</h1>
    </div>
    @if (User.Identity.IsAuthenticated && (User.IsInRole("Admin") || User.IsInRole("Caretaker")))
    {
        <div class=col-sm-4 align=right>
            <p>
                <form method="post">
                    @Html.AntiForgeryToken()
                    <button type="submit" asp-page-handler="Create">Create Animal</button>
                </form>
            </p>
        </div>
    }

</div>

<form asp-page="./Index" method="get">
    <div class="form-actions mt-3">
        <dl class="row">
            <dt class="col-sm-2">
                Find by species:
            </dt>
            <dd class="col-sm-10">
                <input id="search" type="text" />
            </dd>
            <dt class="col-sm-2">
                reserved
            </dt>
            <dd class="col-sm-10">
                <input type="checkbox" id="reserved" />
            </dd>
            <dt class="col-sm-2">
                not reserved
            </dt>
            <dd class="col-sm-10">
                <input type="checkbox" id="notReserved" />
            </dd>
        </dl>
        <input type="submit" value="Search" class="btn btn-primary" /> |
        <a asp-page="./Index">Back to full List</a>
    </div>
</form>


<div id="data">
<table class="table mt-4">
    <thead class="thead-dark">
        <tr>
            <th></th>
            <th>
                @Html.DisplayNameFor(model => model.Animals[0].Name)
            </th>
            <th>
                Species
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Animals[0].Gender)
            </th>
            <th scope="col" id="dateBirth" class="btn-primary">
                @Html.DisplayNameFor(model => model.Animals[0].Birth)
            </th>
            <th scope="col" id="dateArrival" class="btn-primary">
                @Html.DisplayNameFor(model => model.Animals[0].DateOfArrival)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Animals[0].Size)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Animals[0].About)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Animals[0].Reserved)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Animals[0].Friendly)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Animals[0].ForBeginners)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Animals[0].Territory)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Animals)
        {
            <tr>
                <td>
                    <img src="@Html.DisplayFor(modelItem => item.Photos.First().Source)" height="80" />
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Breed)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Gender)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Birth)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DateOfArrival)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Size)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.About)
                </td>
                <td align=center>
                    @Html.DisplayFor(modelItem => item.Reserved)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Friendly)
                </td>
                <td align=center>
                    @Html.DisplayFor(modelItem => item.ForBeginners)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Territory)
                </td>
                <td>
                    @if (User.Identity.IsAuthenticated && (User.IsInRole("Admin") || User.IsInRole("Caretaker") || User.IsInRole("Vet")))
                    {
                        <a asp-page="./Edit" asp-route-id="@item.Id">Edit</a>
                    }
                    @if (User.Identity.IsAuthenticated && (User.IsInRole("Admin") || User.IsInRole("Caretaker")))
                    {
                        <a asp-page="./Delete" asp-route-id="@item.Id">Delete</a>
                    }
                    <a asp-page="./Details" asp-route-id="@item.Id">Details</a>
                </td>
            </tr>
        }
    </tbody>
</table>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        var order = 0;
        var selectedDelete = 0;
        var reserve = 0;

        const updateFlags = function () {
            window.history.pushState('Animals', '', '?search=' + document.getElementById('search').value + "&order=" + order + "&reserved=" + reserve);
            $('#data').load(location.href + " #data");
        };

        $('#search').on('input', updateFlags);

        $(document).on('click', '#dateBirth', () => {
            order = order == 1 ? -1 : 1;
            updateFlags();
        });

        $(document).on('click', '#dateArrival', () => {
            order = order == 2 ? -2 : 2;
            updateFlags();
        });

        $(document).on('click', '#reserved', () => {
            reserve = reserve == 1 ? 0 : 1;
            document.getElementById("notReserved").checked = false;
            updateFlags();
        });

        $(document).on('click', '#notReserved', () => {
            reserve = reserve == -1 ? 0 : -1;
            document.getElementById("reserved").checked = false;
            updateFlags();
        });

    </script>
}
